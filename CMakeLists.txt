cmake_minimum_required(VERSION 3.8)

# set the project name
project(loader)

if(WINDOWS)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /DEBUG /EHsc /MDd ")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /DEBUG /Zi /EHsc /MD")
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /DEBUG")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
    if(CMAKE_CL_64)
        set(Npl_TARGET X64)
    else()
        set(Npl_TARGET X86)
    endif()
	if (${CMAKE_GENERATOR} STREQUAL "Visual Studio 16 2019")
		add_compile_options(/Zc:__cplusplus)
	endif()
elseif(LINUX)
    add_definitions(-DLINUX64)
    set(Npl_TARGET X64)
    set(CMAKE_BUILD_TYPE Release)
    SET(CMAKE_CXX_FLAGS "-std=c++17 -pthread -lrt -lssl -lcrypto -lz -g -ggdb -Wall")
    SET(CMAKE_CXX_FLAGS_DEBUG "-O0")
    SET(CMAKE_CXX_FLAGS_RELEASE "-O0")
endif()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}) 
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib/${CMAKE_BUILD_TYPE}) 
SET(CMAKE_CONFIGURATION_TYPES "Debug;Release" CACHE STRING "" FORCE) 

if(WIN32)
    if(CMAKE_CL_64)
        add_definitions(-D_WIN64)
    else()
        add_definitions(-D_WIN32)
    endif()
endif()

if(UNIX)
    if(CMAKE_CL_64)
        add_definitions(-D_LINUX64)
    else()
        add_definitions(-D_LINUX32)
    endif()
endif()

add_subdirectory(src)